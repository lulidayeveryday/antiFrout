{"remainingRequest":"E:\\2020xian\\git-AntiFraud\\node_modules\\_babel-loader@8.2.2@babel-loader\\lib\\index.js!E:\\2020xian\\git-AntiFraud\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js??ref--0-0!E:\\2020xian\\git-AntiFraud\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js??vue-loader-options!E:\\2020xian\\git-AntiFraud\\src\\views\\dashboard\\admin\\components\\mapChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\2020xian\\git-AntiFraud\\src\\views\\dashboard\\admin\\components\\mapChart.vue","mtime":1608618485419},{"path":"E:\\2020xian\\git-AntiFraud\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\2020xian\\git-AntiFraud\\node_modules\\_babel-loader@8.2.2@babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\2020xian\\git-AntiFraud\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\2020xian\\git-AntiFraud\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["mapChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div :class=\"className\" :style=\"{height:height,width:width}\" />\n</template>\n\n<script>\nimport echarts from 'echarts'\nrequire('echarts/theme/macarons') // echarts theme\nrequire('echarts/map/js/province/shanxi1')\nimport resize from './mixins/resize'\n\nconst animationDuration = 6000\n\nexport default {\n  mixins: [resize],\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '500px'\n    }\n  },\n  data() {\n    return {\n      chart: null\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.initChart()\n    })\n  },\n  beforeDestroy() {\n    if (!this.chart) {\n      return\n    }\n    this.chart.dispose()\n    this.chart = null\n  },\n  methods: {\n    initChart() {\n      this.chart = echarts.init(this.$el, 'macarons')\n\n      var geoCoordMap = {\n        '西安': [108.8480, 34.0631],\n        '宝鸡': [107.1448, 34.3693],\n        '铜川': [108.9796, 35.3165],\n        '咸阳': [108.3051, 34.8334],\n        '渭南': [109.8028, 34.5993],\n        '延安': [109.4908, 36.5965],\n        '汉中': [107.0286, 33.0776],\n        '榆林': [109.7411, 38.2901],\n        '安康': [109.0292, 32.6903],\n        '商洛': [109.9397, 33.6683]\n      };\n      var colors = [\n        [\"#1DE9B6\", \"#F46E36\", \"#04B9FF\", \"#5DBD32\", \"#FFC809\", \"#FB95D5\", \"#BDA29A\", \"#6E7074\", \"#546570\", \"#C4CCD3\"],\n        [\"#37A2DA\", \"#67E0E3\", \"#32C5E9\", \"#9FE6B8\", \"#FFDB5C\", \"#FF9F7F\", \"#FB7293\", \"#E062AE\", \"#E690D1\", \"#E7BCF3\", \"#9D96F5\", \"#8378EA\", \"#8378EA\"],\n        [\"#DD6B66\", \"#759AA0\", \"#E69D87\", \"#8DC1A9\", \"#EA7E53\", \"#EEDD78\", \"#73A373\", \"#73B9BC\", \"#7289AB\", \"#91CA8C\", \"#F49F42\"],\n      ];\n      var colorIndex = 0;\n      var year = [ \"2016\", \"2017\", \"2018\", \"2019\", \"2020\"];\n      var mapData = [\n        [],\n        [],\n        [],\n        [],\n        [],\n        []\n      ];\n\n      /*柱子Y名称*/\n      var categoryData = [];\n      var barData = [];\n      for (var key in geoCoordMap) {\n        categoryData.push(key);\n        mapData[0].push({\n          \"year\": '2016',\n          \"name\": key,\n          \"value\": this.randomNum(100, 300)\n        });\n        mapData[1].push({\n          \"year\": '2017',\n          \"name\": key,\n          \"value\": this.randomNum(100, 300)\n        });\n        mapData[2].push({\n          \"year\": '2018',\n          \"name\": key,\n          \"value\": this.randomNum(100, 300)\n        });\n        mapData[3].push({\n          \"year\": '2019',\n          \"name\": key,\n          \"value\": this.randomNum(100, 300)\n        });\n        mapData[4].push({\n          \"year\": '2020',\n          \"name\": key,\n          \"value\": this.randomNum(100, 300)\n        });\n\n      }\n      for (var i = 0; i < mapData.length; i++) {\n        barData.push([]);\n        for (var j = 0; j < mapData[i].length; j++) {\n          barData[i].push(mapData[i][j].value)\n        }\n      }\n      var convertData = function(data) {\n        var res = [];\n        for (var i = 0; i < data.length; i++) {\n          var geoCoord = geoCoordMap[data[i].name];\n          if (geoCoord) {\n            res.push({\n              name: data[i].name,\n              value: geoCoord.concat(data[i].value)\n            });\n          }\n        }\n        return res;\n      };\n      var convertToLineData = function(data, gps) {\n        var res = [];\n        for (var i = 0; i < data.length; i++) {\n          var dataItem = data[i];\n          var fromCoord = geoCoordMap[dataItem.name];\n          var toCoord = gps; //郑州\n          //  var toCoord = geoGps[Math.random()*3];\n          if (fromCoord && toCoord) {\n            res.push([{\n              coord: fromCoord,\n              value: dataItem.value\n            }, {\n              coord: toCoord,\n            }]);\n          }\n        }\n        return res;\n      };\n      var optionXyMap01 = {\n        timeline: {\n          data: year,\n          axisType: 'category',\n          autoPlay: true,\n          playInterval: 3000,\n          left: '10%',\n          right: '10%',\n          bottom: '2%',\n          width: '80%',\n          //  height: null,\n          label: {\n            normal: {\n              textStyle: {\n                color: '#ddd'\n              }\n            },\n            emphasis: {\n              textStyle: {\n                color: '#fff'\n              }\n            }\n          },\n          symbolSize: 10,\n          lineStyle: {\n            color: '#555'\n          },\n          checkpointStyle: {\n            borderColor: '#777',\n            borderWidth: 2\n          },\n          controlStyle: {\n            showNextBtn: true,\n            showPrevBtn: true,\n            normal: {\n              color: '#666',\n              borderColor: '#666'\n            },\n            emphasis: {\n              color: '#aaa',\n              borderColor: '#aaa'\n            }\n          },\n\n        },\n        baseOption: {\n          animation: true,\n          animationDuration: 1000,\n          animationEasing: 'cubicInOut',\n          animationDurationUpdate: 1000,\n          animationEasingUpdate: 'cubicInOut',\n          grid: {\n            right: '10%',\n            top: '18%',\n            bottom: '10%',\n            width: '25%'\n          },\n          tooltip: {\n            trigger: 'axis', // hover触发器\n            axisPointer: { // 坐标轴指示器，坐标轴触发有效\n              type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\n              shadowStyle: {\n                color: 'rgba(150,150,150,0.1)' //hover颜色\n              }\n            }\n          },\n          geo: {\n            show: true,\n            map: '陕西',\n            roam: true,\n            zoom: 1,\n            center: [110.9480, 35.2631],\n            label: {\n              emphasis: {\n                show: false\n              }\n            },\n            itemStyle: {\n              normal: {\n                borderColor: 'rgba(147, 235, 248, 1)',\n                borderWidth: 1,\n                areaColor: {\n                  type: 'radial',\n                  x: 0.5,\n                  y: 0.5,\n                  r: 0.8,\n                  colorStops: [{\n                    offset: 0,\n                    color: 'rgba(147, 235, 248, 0)' // 0% 处的颜色\n                  }, {\n                    offset: 1,\n                    color: 'rgba(147, 235, 248, .2)' // 100% 处的颜色\n                  }],\n                  globalCoord: false // 缺省为 false\n                },\n                shadowColor: 'rgba(128, 217, 248, 1)',\n                // shadowColor: 'rgba(255, 255, 255, 1)',\n                shadowOffsetX: -2,\n                shadowOffsetY: 2,\n                shadowBlur: 10\n              },\n              emphasis: {\n                areaColor: '#389BB7',\n                borderWidth: 0\n              }\n            }\n          },\n        },\n        options: []\n\n      };\n      for (var n = 0; n < year.length; n++) {\n        optionXyMap01.options.push({\n          backgroundColor: '#051b4a',\n          title: [{\n            /* text: '地图',\n             subtext: '内部数据请勿外传',\n             left: 'center',\n             textStyle: {\n                 color: '#fff'\n             }*/\n          },\n            {\n              id: 'statistic',\n              text: year[n] + \"年数据统计情况\",\n              left: '60%',\n              top: '8%',\n              textStyle: {\n                color: '#fff',\n                fontSize: 24\n              }\n            }\n          ],\n          xAxis: {\n            type: 'value',\n            scale: true,\n            position: 'top',\n            min: 0,\n            boundaryGap: false,\n            splitLine: {\n              show: false\n            },\n            axisLine: {\n              show: false\n            },\n            axisTick: {\n              show: false\n            },\n            axisLabel: {\n              margin: 2,\n              textStyle: {\n                color: '#aaa'\n              }\n            },\n          },\n          yAxis: {\n            type: 'category',\n            //  name: 'TOP 20',\n            nameGap: 16,\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#ddd'\n              }\n            },\n            axisTick: {\n              show: false,\n              lineStyle: {\n                color: '#ddd'\n              }\n            },\n            axisLabel: {\n              interval: 0,\n              textStyle: {\n                color: '#ddd'\n              }\n            },\n            data: categoryData\n          },\n          series: [\n            //未知作用\n            {\n              //文字和标志\n              name: 'light',\n              type: 'scatter',\n              coordinateSystem: 'geo',\n              data: convertData(mapData[n]),\n              symbol: 'pin', //气泡\n              symbolSize: function(val) {\n                return 40;\n              },\n              label: {\n                normal: {\n                  formatter: '{@[2]}',\n                  // position: 'right',\n                  color: '#fff',\n                  fontSize: 9,\n                  show: true\n                },\n                emphasis: {\n                  show: true\n                }\n              },\n              itemStyle: {\n                normal: {\n                  color: '#F62157'\n                  // color: colors[colorIndex][n]\n                }\n              }\n            },\n            //地图？\n            {\n              type: 'map',\n              map: '陕西',\n              geoIndex: 0,\n              aspectScale: 0.75, //长宽比\n              showLegendSymbol: false, // 存在legend时显示\n              label: {\n                normal: {\n                  show: false\n                },\n                emphasis: {\n                  show: false,\n                  textStyle: {\n                    color: '#fff'\n                  }\n                }\n              },\n              roam: true,\n              itemStyle: {\n                normal: {\n                  areaColor: '#031525',\n                  borderColor: '#FFFFFF',\n                },\n                emphasis: {\n                  areaColor: '#2B91B7'\n                }\n              },\n              animation: false,\n              data: mapData\n            },\n            //地图点的动画效果\n            {\n              //  name: 'Top 5',\n              type: 'effectScatter',\n              coordinateSystem: 'geo',\n              data: convertData(mapData[n].sort(function(a, b) {\n                return b.value - a.value;\n              }).slice(0, 20)),\n              symbolSize: function(val) {\n                return 10;\n              },\n              showEffectOn: 'render',\n              rippleEffect: {\n                brushType: 'stroke'\n              },\n              hoverAnimation: true,\n              label: {\n                normal: {\n                  formatter: '{b}',\n                  position: 'right',\n                  show: true\n                }\n              },\n              itemStyle: {\n                normal: {\n                  color: colors[colorIndex][n],\n                  shadowBlur: 10,\n                  shadowColor: colors[colorIndex][n]\n                }\n              },\n              zlevel: 1\n            },\n            // {\n            //     name: '数据点',\n            //     type: 'scatter',\n            //     coordinateSystem: 'geo',\n            //     symbol: 'pin', //气泡\n            //     symbolSize: function(val) {\n            //         return 32;\n            //     },\n            //     label: {\n            //         normal: {\n            //             show: true,\n            //             textStyle: {\n            //                 formatter: '{@value}',\n            //                 color: '#fff',\n            //                 fontSize: 9,\n            //             }\n            //         }\n            //     },\n            //     itemStyle: {\n            //         normal: {\n            //             color: '#F62157', //标志颜色\n            //         }\n            //     },\n            //     zlevel: 6,\n            //     data: convertData(mapData[n]),\n            // },\n            //柱状图\n            {\n              zlevel: 1.5,\n              type: 'bar',\n              symbol: 'none',\n              itemStyle: {\n                normal: {\n                  color: colors[colorIndex][n]\n                }\n              },\n              data: barData[n]\n            }\n          ]\n        })\n      }\n\n      this.chart.setOption(optionXyMap01)\n\n    },\n    randomNum(minNum, maxNum) {\n      switch (arguments.length) {\n        case 1:\n          return parseInt(Math.random() * minNum + 1, 10);\n          break;\n        case 2:\n          return parseInt(Math.random() * (maxNum - minNum + 1) + minNum, 10);\n          break;\n        default:\n          return 0;\n          break;\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/dashboard/admin/components"}]}