{"remainingRequest":"E:\\2020xian\\git-AntiFraud\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js??vue-loader-options!E:\\2020xian\\git-AntiFraud\\src\\views\\fraud-management\\hawkeye-daily.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\2020xian\\git-AntiFraud\\src\\views\\fraud-management\\hawkeye-daily.vue","mtime":1610329590792},{"path":"E:\\2020xian\\git-AntiFraud\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\2020xian\\git-AntiFraud\\node_modules\\_babel-loader@8.2.2@babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\2020xian\\git-AntiFraud\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\2020xian\\git-AntiFraud\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGZldGNoaGF3a2V5ZURhaWx5TGlzdCB9IGZyb20gJ0AvYXBpL2ZyYXVkLW1hbmFnZW1lbnQnCmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JwoKICBleHBvcnQgZGVmYXVsdCB7CiAgICAgIG5hbWU6ICJoYXdrZXllLWRhaWx5IiwKICAgIGRhdGEoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgb3B0aW9uczogWwogICAgICAgICAgewogICAgICAgICAgdmFsdWU6ICc4NDQnLAogICAgICAgICAgbGFiZWw6ICflkrjpmLMnCiAgICAgICAgfSwgewogICAgICAgICAgdmFsdWU6ICc4NDInLAogICAgICAgICAgbGFiZWw6ICflu7blroknCiAgICAgICAgfSwgewogICAgICAgICAgdmFsdWU6ICc4NDUnLAogICAgICAgICAgbGFiZWw6ICfmpobmnpcnCiAgICAgICAgfSwgewogICAgICAgICAgdmFsdWU6ICc4NDMnLAogICAgICAgICAgbGFiZWw6ICfmuK3ljZcnCiAgICAgICAgfSwgewogICAgICAgICAgdmFsdWU6ICc4NDcnLAogICAgICAgICAgbGFiZWw6ICfllYbmtJsnCiAgICAgICAgfSwgewogICAgICAgICAgdmFsdWU6ICc4NDEnLAogICAgICAgICAgbGFiZWw6ICfopb/lroknCiAgICAgICAgfSwgewogICAgICAgICAgdmFsdWU6ICc4NDgnLAogICAgICAgICAgbGFiZWw6ICflronlurcnCiAgICAgICAgfSwgewogICAgICAgICAgdmFsdWU6ICc4NDknLAogICAgICAgICAgbGFiZWw6ICfmsYnkuK0nCiAgICAgICAgfSwgewogICAgICAgICAgdmFsdWU6ICc4NDAnLAogICAgICAgICAgbGFiZWw6ICflrp3puKEnCiAgICAgICAgfSwgewogICAgICAgICAgdmFsdWU6ICc4NDYnLAogICAgICAgICAgbGFiZWw6ICfpk5zlt50nCiAgICAgICAgfV0sLy/lnLDluILkuIvmi4nmoYblsZXnpLrmlbDmja4KICAgICAgICBwcm92aW5jZTogJycsLy/nnIHku70KICAgICAgICBjaXR5OicnLC8v5Zyw5biCCiAgICAgICAgZGF0YVR5cGU6JycsLy/mlbDmja7nsbvlnosKICAgICAgICB0aW1lOicnLAogICAgICAgIGxpc3Q6W10sLy/ooajmoLzmlbDmja4KICAgICAgICBkaWFsb2dGb3JtVmlzaWJsZTpmYWxzZSwvL+e7n+iuoeWPo+W+hOivtOaYjgogICAgICAgIGRvd25sb2FkTG9hZGluZzogZmFsc2UKICAgICAgfQogICAgfSwKICAgIGNyZWF0ZWQoKXsKICAgICAgdGhpcy5mZXRjaExpc3QoKTsKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgIGZldGNoTGlzdCgpewogICAgICAgIGxldCBwYXJhbT17fTsKICAgICAgICBwYXJhbS5wcm92aW5jZT10aGlzLnByb3ZpbmNlOwogICAgICAgIHBhcmFtLmNpdHk9dGhpcy5jaXR5OwogICAgICAgIHBhcmFtLmRhdGFUeXBlPXRoaXMuZGF0YVR5cGU7CiAgICAgICAgbGV0IHRpbWUgPSB0aGlzLnRpbWU7CiAgICAgICAgaWYodGltZSE9JycpewogICAgICAgICAgbGV0IHN0YXJ0VGltZSA9IG1vbWVudCh0aW1lWzBdKS5mb3JtYXQoJ1lZWVktTU0tREQnKTsKICAgICAgICAgIGxldCBlbmRUaW1lID0gbW9tZW50KHRpbWVbMV0pLmZvcm1hdCgnWVlZWS1NTS1ERCcpOwogICAgICAgICAgcGFyYW0uc3RhcnRUaW1lPXN0YXJ0VGltZTsKICAgICAgICAgIHBhcmFtLmVuZFRpbWU9ZW5kVGltZTsKICAgICAgICB9ZWxzZSB7CiAgICAgICAgICBwYXJhbS5zdGFydFRpbWU9Jyc7CiAgICAgICAgICBwYXJhbS5lbmRUaW1lPScnOwogICAgICAgIH0KICAgICAgICBmZXRjaGhhd2tleWVEYWlseUxpc3QocGFyYW0pLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgaWYocmVzcG9uc2UubGVuZ3RoPjApewogICAgICAgICAgICB0aGlzLmxpc3QgPSByZXNwb25zZTsKICAgICAgICAgIH0KICAgICAgICB9KS5jYXRjaChlcnIgPT4gewogICAgICAgICAgY29uc29sZS5sb2coZXJyKQogICAgICAgIH0pCiAgICAgIH0sCiAgICAgIG9uU3VibWl0KCkgewogICAgICAgIHRoaXMuZmV0Y2hMaXN0KCk7CiAgICAgIH0sCiAgICAgIGdldFN1bW1hcmllcyhwYXJhbSkgewogICAgICAgIGNvbnN0IHsgY29sdW1ucywgZGF0YSB9ID0gcGFyYW07CiAgICAgICAgY29uc3Qgc3VtcyA9IFtdOwogICAgICAgIGNvbHVtbnMuZm9yRWFjaCgoY29sdW1uLCBpbmRleCkgPT4gewogICAgICAgICAgaWYgKGluZGV4ID09PSAwKSB7CiAgICAgICAgICAgIHN1bXNbaW5kZXhdID0gJ+WQiOiuoSc7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgIH1lbHNlIGlmKGluZGV4ID09PSAxKXsKICAgICAgICAgICAgc3Vtc1tpbmRleF0gPSAnLS0nOwogICAgICAgICAgICByZXR1cm4KICAgICAgICAgIH0KICAgICAgICAgIGNvbnN0IHZhbHVlcyA9IGRhdGEubWFwKGl0ZW0gPT4gTnVtYmVyKGl0ZW1bY29sdW1uLnByb3BlcnR5XSkpOwogICAgICAgICAgc3Vtc1tpbmRleF0gPSB2YWx1ZXMucmVkdWNlKChwcmV2LCBjdXJyKSA9PiB7CiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gTnVtYmVyKGN1cnIpOwogICAgICAgICAgICBpZiAoIWlzTmFOKHZhbHVlKSkgewogICAgICAgICAgICAgIHJldHVybiBwcmV2ICsgY3VycjsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICByZXR1cm4gcHJldjsKICAgICAgICAgICAgfQogICAgICAgICAgfSwgMCk7CiAgICAgICAgICBzdW1zW2luZGV4XSArPSAnJzsKICAgICAgICB9KTsKCiAgICAgICAgcmV0dXJuIHN1bXM7CiAgICAgIH0sCiAgICAgIGhhbmRsZURvd25sb2FkKCkgewogICAgICAgIHRoaXMuZG93bmxvYWRMb2FkaW5nID0gdHJ1ZQogICAgICAgIGltcG9ydCgnQC92ZW5kb3IvRXhwb3J0MkV4Y2VsJykudGhlbihleGNlbCA9PiB7CiAgICAgICAgICBjb25zdCB0SGVhZGVyID0gWwogICAgICAgICAgICAn5Zyw5biCJywKICAgICAgICAgICAgJ+e7n+iuoeaXpeacnycsCiAgICAgICAgICAgICfpubDnnLzkuIvlj5Hph48nLAogICAgICAgICAgICAnYnNz55So5oi36YePJywKICAgICAgICAgICAgJ+eZveWQjeWNlei/h+a7pOmHjycsCiAgICAgICAgICAgICfnirbmgIHov4fmu6Tph48nLAogICAgICAgICAgICAn5YGc5py65oiQ5Yqf6YePJywKICAgICAgICAgICAgJ+mdk+WPt+i/h+a7pOmHjycsCiAgICAgICAgICAgICflgZzmnLrlpLHotKXph48nLAogICAgICAgICAgICAn5YGc5py6546HJywKICAgICAgICAgICAgJzflpKnkuIvlj5Hph48nLAogICAgICAgICAgICAnN+WkqeWkjeW8gOmHjycsCiAgICAgICAgICAgICc35aSp55m95ZCN5Y2V6L+H5ruk6YePJywKICAgICAgICAgICAgJzflpKnlpI3lvIDnjocnLAogICAgICAgICAgICAnN+WkqeWBnOacuumHjycsCiAgICAgICAgICAgICc35aSp5YGc5py6546HJ10KICAgICAgICAgIGNvbnN0IGZpbHRlclZhbCA9IFsnQVJFQV9ERVNDJywKICAgICAgICAgICAgJ1NUQVRJQ19USU1FJywKICAgICAgICAgICAgJ0VZRV9OVU0nLAogICAgICAgICAgICAnQlNTX1VTRVJfTlVNJywKICAgICAgICAgICAgJ1dISVRFX0ZJTFRFUl9OVU0nLAogICAgICAgICAgICAnU1RBVEVfRklMVEVSX05VTScsCiAgICAgICAgICAgICdTSFVURE9XTl9TVUNFU1MnLAogICAgICAgICAgICAnRklMVF9DQVBBQ0lUWScsCiAgICAgICAgICAgICdTSFVURE9XTl9GQUlMRUQnLAogICAgICAgICAgICAnVEpMJywKICAgICAgICAgICAgJ1NFVkVOX1ZPTFVNRScsCiAgICAgICAgICAgICdTRVZFTl9PUEVOJywKICAgICAgICAgICAgJ1NFVkVOX1dISVRFX0ZJTFRFUl9OVU0nLAogICAgICAgICAgICAnRktMJywKICAgICAgICAgICAgJ1NFVkVOX1NIVVRET1dOJywKICAgICAgICAgICAgJ1RKTDcnXQogICAgICAgICAgY29uc3QgZGF0YSA9IHRoaXMuZm9ybWF0SnNvbihmaWx0ZXJWYWwpCiAgICAgICAgICBleGNlbC5leHBvcnRfanNvbl90b19leGNlbCh7CiAgICAgICAgICAgIGhlYWRlcjogdEhlYWRlciwKICAgICAgICAgICAgZGF0YSwKICAgICAgICAgICAgZmlsZW5hbWU6ICfpubDnnLzlgZzmnLrnjofml6XmiqUnCiAgICAgICAgICB9KQogICAgICAgICAgdGhpcy5kb3dubG9hZExvYWRpbmcgPSBmYWxzZQogICAgICAgIH0pCiAgICAgIH0sCiAgICAgIGZvcm1hdEpzb24oZmlsdGVyVmFsKSB7CiAgICAgICAgcmV0dXJuIHRoaXMubGlzdC5tYXAodiA9PiBmaWx0ZXJWYWwubWFwKGogPT4gewogICAgICAgICAgaWYgKGogPT09ICd0aW1lc3RhbXAnKSB7CiAgICAgICAgICAgIHJldHVybiBwYXJzZVRpbWUodltqXSkKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiB2W2pdCiAgICAgICAgICB9CiAgICAgICAgfSkpCiAgICAgIH0sCiAgICB9LAogIH0K"},{"version":3,"sources":["hawkeye-daily.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"hawkeye-daily.vue","sourceRoot":"src/views/fraud-management","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <div style=\"display: inline-block;padding-right: 20px;\">\n        <span style=\"padding: 0 8px 0 0\">省份</span>\n        <el-select v-model=\"province\" placeholder=\"请选择\">\n          <el-option key=\"sx\" label=\"陕西\" value=\"sx\"></el-option>\n        </el-select>\n      </div>\n      <div style=\"display:inline-block;padding-right: 20px;\">\n        <span style=\"padding: 0 8px 0 0;\">地市</span>\n        <el-select v-model=\"city\" placeholder=\"请选择\">\n          <el-option\n            v-for=\"item in options\"\n            :key=\"item.value\"\n            :label=\"item.label\"\n            :value=\"item.value\">\n          </el-option>\n        </el-select>\n      </div>\n      <div style=\"display:inline-block;padding-right: 20px;\">\n        <span style=\"padding: 0 8px 0 0;\">数据类型</span>\n        <el-select v-model=\"dataType\" placeholder=\"请选择\">\n          <el-option key=\"sx1\" value=\"-1\" label=\"全部\"></el-option>\n          <el-option key=\"sx2\" value=\"1\" label=\"欺诈类型\"></el-option>\n          <el-option key=\"sx3\" value=\"2\" label=\"骚扰数据\"></el-option>\n        </el-select>\n      </div>\n      <div style=\"display:inline-block;padding-right: 20px;\">\n        <span style=\"padding: 0 8px 0 0;\">统计时间</span>\n        <el-date-picker\n          v-model=\"time\"\n          type=\"daterange\"\n          range-separator=\"至\"\n          start-placeholder=\"开始日期\"\n          end-placeholder=\"结束日期\">\n        </el-date-picker>\n      </div>\n\n      <el-button class=\"filter-item\" style=\"margin: 0 7px 0;\" type=\"primary\" icon=\"el-icon-search\" @click=\"onSubmit\">\n        查询\n      </el-button>\n      <el-button :loading=\"downloadLoading\" style=\"margin:0 15px 0 7px;\" type=\"success\" icon=\"el-icon-document\" @click=\"handleDownload\">\n        导出表格\n      </el-button>\n      <span style=\"display: inline-block;color: #535353;font-size: 12px;line-height: 16px;margin-top: 14px;\" @click=\"dialogFormVisible = true\">\n        <el-button type=\"info\" icon=\"el-icon-warning-outline\" circle style=\"padding: 2px;font-size: 16px;\"></el-button>&nbsp;统计口径说明\n      </span>\n    </div>\n\n\n\n    <el-table\n      :key=\"tableKey\"\n      :data=\"list\"\n      border\n      fit\n      show-summary\n      :summary-method=\"getSummaries\"\n      fit=\"true\"\n      highlight-current-row\n      style=\"width: 100%;\"\n    >\n      <el-table-column label=\"地市\" prop=\"AREA_DESC\" width=\"70\" align=\"center\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column label=\"统计日期\" min-width=\"100\" prop=\"STATIC_TIME\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column label=\"鹰眼下发量\" min-width=\"96\" prop=\"EYE_NUM\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column label=\"bss用户量\" min-width=\"96\" prop=\"BSS_USER_NUM\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column label=\"白名单过滤量\" min-width=\"112\" prop=\"WHITE_FILTER_NUM\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column label=\"状态过滤量\" min-width=\"96\" prop=\"STATE_FILTER_NUM\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column label=\"停机成功量\" min-width=\"96\" prop=\"SHUTDOWN_SUCESS\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column label=\"靓号过滤量\" min-width=\"96\" prop=\"FILT_CAPACITY\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column label=\"停机失败量\" min-width=\"96\" prop=\"SHUTDOWN_FAILED\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column label=\"停机率\" prop=\"TJL\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column label=\"7天下发量\" min-width=\"96\" prop=\"SEVEN_VOLUME\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column label=\"7天复开量\" min-width=\"96\" prop=\"SEVEN_OPEN\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column label=\"7天白名单过滤量\" min-width=\"134\" prop=\"SEVEN_WHITE_FILTER_NUM\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column label=\"7天复开率\" min-width=\"96\" prop=\"FKL\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column label=\"7天停机量\" min-width=\"96\" prop=\"SEVEN_SHUTDOWN\" show-overflow-tooltip>\n      </el-table-column>\n      <el-table-column label=\"7天停机率\" min-width=\"96\" prop=\"TJL7\" show-overflow-tooltip>\n      </el-table-column>\n    </el-table>\n\n\n    <el-dialog :title=\"'统计口径说明'\" :visible.sync=\"dialogFormVisible\">\n      <div>\n        <ul style=\"line-height: 25px;\">\n          <li>每晚凌晨1点汇总前日鹰眼下发数据总量</li>\n          <li>下发总量为鹰眼下发数据剔除重复后的量(所有指标都是剔除重复后的)</li>\n          <li>白名单、靓号、停机成功、失败、非正常状态不停机 这四列数据中相互存在重复的可能性（四项加起来可能不等于下发总数）</li>\n          <li>停机率=系统停机成功号码数/鹰眼下发数量</li>\n          <li>7天内复开数量 指从截止汇总时间点号码状态是正常开通的7天内鹰眼下发的号码数量</li>\n          <li>7天内复开率=7天内复开号码/(7天下发的号码-白名单数量) （剔除重复后的量进行比较）</li>\n          <li>7天内停机数量 指截止汇总时间点离网+预销户停机+局方停机的号码数量</li>\n          <li>7天停机率=7天内停机数量/(7天下发的号码-白名单数量) （剔除重复后的量进行比较）</li>\n          <li>报表中统计日期为数据汇总时间，汇总的是前一天下发数据的整体情况</li>\n        </ul>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n  import { fetchhawkeyeDailyList } from '@/api/fraud-management'\n  import moment from 'moment'\n\n    export default {\n        name: \"hawkeye-daily\",\n      data() {\n        return {\n          options: [\n            {\n            value: '844',\n            label: '咸阳'\n          }, {\n            value: '842',\n            label: '延安'\n          }, {\n            value: '845',\n            label: '榆林'\n          }, {\n            value: '843',\n            label: '渭南'\n          }, {\n            value: '847',\n            label: '商洛'\n          }, {\n            value: '841',\n            label: '西安'\n          }, {\n            value: '848',\n            label: '安康'\n          }, {\n            value: '849',\n            label: '汉中'\n          }, {\n            value: '840',\n            label: '宝鸡'\n          }, {\n            value: '846',\n            label: '铜川'\n          }],//地市下拉框展示数据\n          province: '',//省份\n          city:'',//地市\n          dataType:'',//数据类型\n          time:'',\n          list:[],//表格数据\n          dialogFormVisible:false,//统计口径说明\n          downloadLoading: false\n        }\n      },\n      created(){\n        this.fetchList();\n      },\n      methods: {\n        fetchList(){\n          let param={};\n          param.province=this.province;\n          param.city=this.city;\n          param.dataType=this.dataType;\n          let time = this.time;\n          if(time!=''){\n            let startTime = moment(time[0]).format('YYYY-MM-DD');\n            let endTime = moment(time[1]).format('YYYY-MM-DD');\n            param.startTime=startTime;\n            param.endTime=endTime;\n          }else {\n            param.startTime='';\n            param.endTime='';\n          }\n          fetchhawkeyeDailyList(param).then(response => {\n            if(response.length>0){\n              this.list = response;\n            }\n          }).catch(err => {\n            console.log(err)\n          })\n        },\n        onSubmit() {\n          this.fetchList();\n        },\n        getSummaries(param) {\n          const { columns, data } = param;\n          const sums = [];\n          columns.forEach((column, index) => {\n            if (index === 0) {\n              sums[index] = '合计';\n              return;\n            }else if(index === 1){\n              sums[index] = '--';\n              return\n            }\n            const values = data.map(item => Number(item[column.property]));\n            sums[index] = values.reduce((prev, curr) => {\n              const value = Number(curr);\n              if (!isNaN(value)) {\n                return prev + curr;\n              } else {\n                return prev;\n              }\n            }, 0);\n            sums[index] += '';\n          });\n\n          return sums;\n        },\n        handleDownload() {\n          this.downloadLoading = true\n          import('@/vendor/Export2Excel').then(excel => {\n            const tHeader = [\n              '地市',\n              '统计日期',\n              '鹰眼下发量',\n              'bss用户量',\n              '白名单过滤量',\n              '状态过滤量',\n              '停机成功量',\n              '靓号过滤量',\n              '停机失败量',\n              '停机率',\n              '7天下发量',\n              '7天复开量',\n              '7天白名单过滤量',\n              '7天复开率',\n              '7天停机量',\n              '7天停机率']\n            const filterVal = ['AREA_DESC',\n              'STATIC_TIME',\n              'EYE_NUM',\n              'BSS_USER_NUM',\n              'WHITE_FILTER_NUM',\n              'STATE_FILTER_NUM',\n              'SHUTDOWN_SUCESS',\n              'FILT_CAPACITY',\n              'SHUTDOWN_FAILED',\n              'TJL',\n              'SEVEN_VOLUME',\n              'SEVEN_OPEN',\n              'SEVEN_WHITE_FILTER_NUM',\n              'FKL',\n              'SEVEN_SHUTDOWN',\n              'TJL7']\n            const data = this.formatJson(filterVal)\n            excel.export_json_to_excel({\n              header: tHeader,\n              data,\n              filename: '鹰眼停机率日报'\n            })\n            this.downloadLoading = false\n          })\n        },\n        formatJson(filterVal) {\n          return this.list.map(v => filterVal.map(j => {\n            if (j === 'timestamp') {\n              return parseTime(v[j])\n            } else {\n              return v[j]\n            }\n          }))\n        },\n      },\n    }\n</script>\n\n<style>\n  .el-table .cell{\n    white-space: nowrap;\n  }\n</style>\n"]}]}