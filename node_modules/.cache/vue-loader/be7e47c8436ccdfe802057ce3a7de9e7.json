{"remainingRequest":"E:\\2020xian\\git-AntiFraud\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js??vue-loader-options!E:\\2020xian\\git-AntiFraud\\src\\views\\fraud-management\\high-risk-roaming.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\2020xian\\git-AntiFraud\\src\\views\\fraud-management\\high-risk-roaming.vue","mtime":1615791891162},{"path":"E:\\2020xian\\git-AntiFraud\\node_modules\\_babel-loader@8.2.2@babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\2020xian\\git-AntiFraud\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\2020xian\\git-AntiFraud\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGhpZ2hSaXNrUm9hbUxpc3QsaGlnaFJpc2tSb2FtRG93biB9IGZyb20gJ0AvYXBpL2ZyYXVkLW1hbmFnZW1lbnQnCmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JwogIGV4cG9ydCBkZWZhdWx0IHsKICAgICAgbmFtZTogImhpZ2gtcmlzay1yb2FtaW5nIiwKICAgIGRhdGEoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgbGlzdDpbXSwKICAgICAgICBsb2FkaW5nOmZhbHNlLAogICAgICAgIGRvd25sb2FkTG9hZGluZzogZmFsc2UsCiAgICAgICAgZGlhbG9nRm9ybVZpc2libGU6ZmFsc2UsCiAgICAgICAgbXVsdGlwbGVTZWxlY3Rpb246W10sCiAgICAgICAgcGFnZVNpemU6MTAsLy/mr4/pobXmmL7npLrmnaHmlbAKICAgICAgICBwYWdlQ3VycmVudDoxLC8v5b2T5YmN6aG1CiAgICAgICAgcGFnZVRvdGFsOjAsCiAgICAgICAgbGlzdERvd246W10sCiAgICAgICAgdGltZTonMDg6MDAtMTA6MDAnLAogICAgICAgIHRpbWVEYXk6JycsCiAgICAgICAgREVWSUNFX05VTUJFUjonJwogICAgICB9CiAgICB9LAogICAgY3JlYXRlZCgpewogICAgICB0aGlzLnRpbWVEYXkgPSB0aGlzLmdldERheSgtMCk7CiAgICAgIHRoaXMuZmV0Y2hMaXN0KCk7CiAgICB9LAogICAgbWV0aG9kczogewogICAgICBnZXREYXkoZGF5KXsKICAgICAgICB2YXIgdG9kYXkgPSBuZXcgRGF0ZSgpOwoKICAgICAgICB2YXIgdGFyZ2V0ZGF5X21pbGxpc2Vjb25kcz10b2RheS5nZXRUaW1lKCkgKyAxMDAwKjYwKjYwKjI0KmRheTsKCiAgICAgICAgdG9kYXkuc2V0VGltZSh0YXJnZXRkYXlfbWlsbGlzZWNvbmRzKTsgLy/ms6jmhI/vvIzov5nooYzmmK/lhbPplK7ku6PnoIEKCiAgICAgICAgdmFyIHRZZWFyID0gdG9kYXkuZ2V0RnVsbFllYXIoKTsKICAgICAgICB2YXIgdE1vbnRoID0gdG9kYXkuZ2V0TW9udGgoKTsKICAgICAgICB2YXIgdERhdGUgPSB0b2RheS5nZXREYXRlKCk7CiAgICAgICAgdE1vbnRoID0gdGhpcy5kb0hhbmRsZU1vbnRoKHRNb250aCArIDEpOwogICAgICAgIHREYXRlID0gdGhpcy5kb0hhbmRsZU1vbnRoKHREYXRlKTsKICAgICAgICByZXR1cm4gdFllYXIrIi0iK3RNb250aCsiLSIrdERhdGU7CiAgICAgIH0sCiAgICAgIGRvSGFuZGxlTW9udGgobW9udGgpewogICAgICAgIHZhciBtID0gbW9udGg7CiAgICAgICAgaWYobW9udGgudG9TdHJpbmcoKS5sZW5ndGggPT0gMSl7CiAgICAgICAgICBtID0gIjAiICsgbW9udGg7CiAgICAgICAgfQogICAgICAgIHJldHVybiBtOwogICAgICB9LAogICAgICBmZXRjaExpc3QoKXsKICAgICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICAgIGxldCBwYXJhbSA9IHt9OwogICAgICAgIHBhcmFtLnN0YXJ0ID0gKHRoaXMucGFnZUN1cnJlbnQtMSkqdGhpcy5wYWdlU2l6ZTsKICAgICAgICBwYXJhbS5sZW5ndGggPSB0aGlzLnBhZ2VTaXplOwogICAgICAgIHBhcmFtLnRpbWUgPSB0aGlzLnRpbWU7CiAgICAgICAgbGV0IHRpbWVEYXkgPSB0aGlzLnRpbWVEYXk7CiAgICAgICAgaWYodGltZURheSE9JycpewogICAgICAgICAgbGV0IGVuZFRpbWUgPSBtb21lbnQodGltZURheSkuZm9ybWF0KCdZWVlZLU1NLUREJyk7CiAgICAgICAgICBwYXJhbS5lbmRUaW1lPWVuZFRpbWU7CiAgICAgICAgfWVsc2UgewogICAgICAgICAgcGFyYW0uZW5kVGltZT0nJzsKICAgICAgICB9CgogICAgICAgIHBhcmFtLkRFVklDRV9OVU1CRVIgPSB0aGlzLkRFVklDRV9OVU1CRVI7CiAgICAgICAgaGlnaFJpc2tSb2FtTGlzdChwYXJhbSkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICB0aGlzLmxpc3QgPSByZXNwb25zZS5kYXRhCiAgICAgICAgICB0aGlzLnBhZ2VUb3RhbCA9IHJlc3BvbnNlLnRvdGFsOwogICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICBoaWdoUmlza1JvYW1Eb3duKHBhcmFtKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgdGhpcy5saXN0RG93biA9IHJlc3BvbnNlCiAgICAgICAgICB9KS5jYXRjaChlcnIgPT4gewogICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpCiAgICAgICAgICB9KQogICAgICAgIH0pLmNhdGNoKGVyciA9PiB7CiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpCiAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICB9KQoKCiAgICAgIH0sCiAgICAgIG9uU3VibWl0KCkgewogICAgICAgIHRoaXMuZmV0Y2hMaXN0KCk7CiAgICAgIH0sCiAgICAgIGhhbmRsZURvd25sb2FkKCkgewogICAgICAgIHRoaXMuZG93bmxvYWRMb2FkaW5nID0gdHJ1ZQogICAgICAgIGltcG9ydCgnQC92ZW5kb3IvRXhwb3J0MkV4Y2VsJykudGhlbihleGNlbCA9PiB7CiAgICAgICAgICBjb25zdCB0SGVhZGVyID0gWwogICAgICAgICAgICAn5qOA5rWL5pe26Ze0JywKICAgICAgICAgICAgJ+WuouaIt0lEJywKICAgICAgICAgICAgJ+aJi+acuuWPt+eggScsCiAgICAgICAgICAgICflnLDluILnvJbnoIEnLAogICAgICAgICAgICAn5omA5bGe5Zyw5biCJywKICAgICAgICAgICAgJ+WPkeWxlea4oOmBk+WQjeensCcsCiAgICAgICAgICAgICflj5HlsZXkurrnvJbnoIEnLAogICAgICAgICAgICAn5Y+R5bGV5Lq6JywKICAgICAgICAgICAgJ+a8q+a4uOWcsOWMuuWPtycsCiAgICAgICAgICAgICfmvKvmuLjlnLAnCiAgICAgICAgICBdCiAgICAgICAgICBjb25zdCBmaWx0ZXJWYWwgPSBbCiAgICAgICAgICAgICdDSEVDS19USU1FJywKICAgICAgICAgICAgJ1VTRVJfSUQnLAogICAgICAgICAgICAnREVWSUNFX05VTUJFUicsCiAgICAgICAgICAgICdBUkVBX0lEJywKICAgICAgICAgICAgJ0FSRUFfREVTQycsCiAgICAgICAgICAgICdDSEFOTkVMX05BTUUnLAogICAgICAgICAgICAnREVWRUxPUEVSX0lEJywKICAgICAgICAgICAgJ0RFVkVMT1BFUl9OQU1FJywKICAgICAgICAgICAgJ1ZJU0lUX0FSRUFfQ09ERScsCiAgICAgICAgICAgICdOQU1FJwogICAgICAgICAgXQogICAgICAgICAgY29uc3QgZGF0YSA9IHRoaXMuZm9ybWF0SnNvbihmaWx0ZXJWYWwpCiAgICAgICAgICBleGNlbC5leHBvcnRfanNvbl90b19leGNlbCh7CiAgICAgICAgICAgIGhlYWRlcjogdEhlYWRlciwKICAgICAgICAgICAgZGF0YSwKICAgICAgICAgICAgZmlsZW5hbWU6ICfpq5jljbHmvKvmuLjor53liqHlvILluLjnrZvpgIknCiAgICAgICAgICB9KQogICAgICAgICAgdGhpcy5kb3dubG9hZExvYWRpbmcgPSBmYWxzZQogICAgICAgIH0pCiAgICAgIH0sCiAgICAgIGZvcm1hdEpzb24oZmlsdGVyVmFsKSB7CiAgICAgICAgcmV0dXJuIHRoaXMubGlzdERvd24ubWFwKHYgPT4gZmlsdGVyVmFsLm1hcChqID0+IHsKICAgICAgICAgIGlmIChqID09PSAndGltZXN0YW1wJykgewogICAgICAgICAgICByZXR1cm4gcGFyc2VUaW1lKHZbal0pCiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gdltqXQogICAgICAgICAgfQogICAgICAgIH0pKQogICAgICB9LAogICAgICBoYW5kbGVTZWxlY3Rpb25DaGFuZ2UodmFsKSB7CiAgICAgICAgdGhpcy5tdWx0aXBsZVNlbGVjdGlvbiA9IHZhbDsKICAgICAgfSwKICAgICAgaGFuZGxlU2l6ZUNoYW5nZSh2YWwpIHsKICAgICAgICB0aGlzLnBhZ2VTaXplPXZhbDsKICAgICAgICB0aGlzLmZldGNoTGlzdCgpOwogICAgICB9LAogICAgICBoYW5kbGVDdXJyZW50Q2hhbmdlKHZhbCkgewogICAgICAgIHRoaXMucGFnZUN1cnJlbnQ9dmFsOwogICAgICAgIHRoaXMuZmV0Y2hMaXN0KCk7CiAgICAgIH0sCiAgICB9CiAgfQo="},null]}