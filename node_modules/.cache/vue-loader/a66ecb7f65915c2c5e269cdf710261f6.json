{"remainingRequest":"E:\\2020xian\\git-AntiFraud\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js??vue-loader-options!E:\\2020xian\\git-AntiFraud\\src\\views\\dashboard\\admin\\components\\mapChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\2020xian\\git-AntiFraud\\src\\views\\dashboard\\admin\\components\\mapChart.vue","mtime":1608618485419},{"path":"E:\\2020xian\\git-AntiFraud\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\2020xian\\git-AntiFraud\\node_modules\\_babel-loader@8.2.2@babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\2020xian\\git-AntiFraud\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\2020xian\\git-AntiFraud\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["mapChart.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"mapChart.vue","sourceRoot":"src/views/dashboard/admin/components","sourcesContent":["<template>\n  <div :class=\"className\" :style=\"{height:height,width:width}\" />\n</template>\n\n<script>\nimport echarts from 'echarts'\nrequire('echarts/theme/macarons') // echarts theme\nrequire('echarts/map/js/province/shanxi1')\nimport resize from './mixins/resize'\n\nconst animationDuration = 6000\n\nexport default {\n  mixins: [resize],\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '500px'\n    }\n  },\n  data() {\n    return {\n      chart: null\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.initChart()\n    })\n  },\n  beforeDestroy() {\n    if (!this.chart) {\n      return\n    }\n    this.chart.dispose()\n    this.chart = null\n  },\n  methods: {\n    initChart() {\n      this.chart = echarts.init(this.$el, 'macarons')\n\n      var geoCoordMap = {\n        '西安': [108.8480, 34.0631],\n        '宝鸡': [107.1448, 34.3693],\n        '铜川': [108.9796, 35.3165],\n        '咸阳': [108.3051, 34.8334],\n        '渭南': [109.8028, 34.5993],\n        '延安': [109.4908, 36.5965],\n        '汉中': [107.0286, 33.0776],\n        '榆林': [109.7411, 38.2901],\n        '安康': [109.0292, 32.6903],\n        '商洛': [109.9397, 33.6683]\n      };\n      var colors = [\n        [\"#1DE9B6\", \"#F46E36\", \"#04B9FF\", \"#5DBD32\", \"#FFC809\", \"#FB95D5\", \"#BDA29A\", \"#6E7074\", \"#546570\", \"#C4CCD3\"],\n        [\"#37A2DA\", \"#67E0E3\", \"#32C5E9\", \"#9FE6B8\", \"#FFDB5C\", \"#FF9F7F\", \"#FB7293\", \"#E062AE\", \"#E690D1\", \"#E7BCF3\", \"#9D96F5\", \"#8378EA\", \"#8378EA\"],\n        [\"#DD6B66\", \"#759AA0\", \"#E69D87\", \"#8DC1A9\", \"#EA7E53\", \"#EEDD78\", \"#73A373\", \"#73B9BC\", \"#7289AB\", \"#91CA8C\", \"#F49F42\"],\n      ];\n      var colorIndex = 0;\n      var year = [ \"2016\", \"2017\", \"2018\", \"2019\", \"2020\"];\n      var mapData = [\n        [],\n        [],\n        [],\n        [],\n        [],\n        []\n      ];\n\n      /*柱子Y名称*/\n      var categoryData = [];\n      var barData = [];\n      for (var key in geoCoordMap) {\n        categoryData.push(key);\n        mapData[0].push({\n          \"year\": '2016',\n          \"name\": key,\n          \"value\": this.randomNum(100, 300)\n        });\n        mapData[1].push({\n          \"year\": '2017',\n          \"name\": key,\n          \"value\": this.randomNum(100, 300)\n        });\n        mapData[2].push({\n          \"year\": '2018',\n          \"name\": key,\n          \"value\": this.randomNum(100, 300)\n        });\n        mapData[3].push({\n          \"year\": '2019',\n          \"name\": key,\n          \"value\": this.randomNum(100, 300)\n        });\n        mapData[4].push({\n          \"year\": '2020',\n          \"name\": key,\n          \"value\": this.randomNum(100, 300)\n        });\n\n      }\n      for (var i = 0; i < mapData.length; i++) {\n        barData.push([]);\n        for (var j = 0; j < mapData[i].length; j++) {\n          barData[i].push(mapData[i][j].value)\n        }\n      }\n      var convertData = function(data) {\n        var res = [];\n        for (var i = 0; i < data.length; i++) {\n          var geoCoord = geoCoordMap[data[i].name];\n          if (geoCoord) {\n            res.push({\n              name: data[i].name,\n              value: geoCoord.concat(data[i].value)\n            });\n          }\n        }\n        return res;\n      };\n      var convertToLineData = function(data, gps) {\n        var res = [];\n        for (var i = 0; i < data.length; i++) {\n          var dataItem = data[i];\n          var fromCoord = geoCoordMap[dataItem.name];\n          var toCoord = gps; //郑州\n          //  var toCoord = geoGps[Math.random()*3];\n          if (fromCoord && toCoord) {\n            res.push([{\n              coord: fromCoord,\n              value: dataItem.value\n            }, {\n              coord: toCoord,\n            }]);\n          }\n        }\n        return res;\n      };\n      var optionXyMap01 = {\n        timeline: {\n          data: year,\n          axisType: 'category',\n          autoPlay: true,\n          playInterval: 3000,\n          left: '10%',\n          right: '10%',\n          bottom: '2%',\n          width: '80%',\n          //  height: null,\n          label: {\n            normal: {\n              textStyle: {\n                color: '#ddd'\n              }\n            },\n            emphasis: {\n              textStyle: {\n                color: '#fff'\n              }\n            }\n          },\n          symbolSize: 10,\n          lineStyle: {\n            color: '#555'\n          },\n          checkpointStyle: {\n            borderColor: '#777',\n            borderWidth: 2\n          },\n          controlStyle: {\n            showNextBtn: true,\n            showPrevBtn: true,\n            normal: {\n              color: '#666',\n              borderColor: '#666'\n            },\n            emphasis: {\n              color: '#aaa',\n              borderColor: '#aaa'\n            }\n          },\n\n        },\n        baseOption: {\n          animation: true,\n          animationDuration: 1000,\n          animationEasing: 'cubicInOut',\n          animationDurationUpdate: 1000,\n          animationEasingUpdate: 'cubicInOut',\n          grid: {\n            right: '10%',\n            top: '18%',\n            bottom: '10%',\n            width: '25%'\n          },\n          tooltip: {\n            trigger: 'axis', // hover触发器\n            axisPointer: { // 坐标轴指示器，坐标轴触发有效\n              type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\n              shadowStyle: {\n                color: 'rgba(150,150,150,0.1)' //hover颜色\n              }\n            }\n          },\n          geo: {\n            show: true,\n            map: '陕西',\n            roam: true,\n            zoom: 1,\n            center: [110.9480, 35.2631],\n            label: {\n              emphasis: {\n                show: false\n              }\n            },\n            itemStyle: {\n              normal: {\n                borderColor: 'rgba(147, 235, 248, 1)',\n                borderWidth: 1,\n                areaColor: {\n                  type: 'radial',\n                  x: 0.5,\n                  y: 0.5,\n                  r: 0.8,\n                  colorStops: [{\n                    offset: 0,\n                    color: 'rgba(147, 235, 248, 0)' // 0% 处的颜色\n                  }, {\n                    offset: 1,\n                    color: 'rgba(147, 235, 248, .2)' // 100% 处的颜色\n                  }],\n                  globalCoord: false // 缺省为 false\n                },\n                shadowColor: 'rgba(128, 217, 248, 1)',\n                // shadowColor: 'rgba(255, 255, 255, 1)',\n                shadowOffsetX: -2,\n                shadowOffsetY: 2,\n                shadowBlur: 10\n              },\n              emphasis: {\n                areaColor: '#389BB7',\n                borderWidth: 0\n              }\n            }\n          },\n        },\n        options: []\n\n      };\n      for (var n = 0; n < year.length; n++) {\n        optionXyMap01.options.push({\n          backgroundColor: '#051b4a',\n          title: [{\n            /* text: '地图',\n             subtext: '内部数据请勿外传',\n             left: 'center',\n             textStyle: {\n                 color: '#fff'\n             }*/\n          },\n            {\n              id: 'statistic',\n              text: year[n] + \"年数据统计情况\",\n              left: '60%',\n              top: '8%',\n              textStyle: {\n                color: '#fff',\n                fontSize: 24\n              }\n            }\n          ],\n          xAxis: {\n            type: 'value',\n            scale: true,\n            position: 'top',\n            min: 0,\n            boundaryGap: false,\n            splitLine: {\n              show: false\n            },\n            axisLine: {\n              show: false\n            },\n            axisTick: {\n              show: false\n            },\n            axisLabel: {\n              margin: 2,\n              textStyle: {\n                color: '#aaa'\n              }\n            },\n          },\n          yAxis: {\n            type: 'category',\n            //  name: 'TOP 20',\n            nameGap: 16,\n            axisLine: {\n              show: true,\n              lineStyle: {\n                color: '#ddd'\n              }\n            },\n            axisTick: {\n              show: false,\n              lineStyle: {\n                color: '#ddd'\n              }\n            },\n            axisLabel: {\n              interval: 0,\n              textStyle: {\n                color: '#ddd'\n              }\n            },\n            data: categoryData\n          },\n          series: [\n            //未知作用\n            {\n              //文字和标志\n              name: 'light',\n              type: 'scatter',\n              coordinateSystem: 'geo',\n              data: convertData(mapData[n]),\n              symbol: 'pin', //气泡\n              symbolSize: function(val) {\n                return 40;\n              },\n              label: {\n                normal: {\n                  formatter: '{@[2]}',\n                  // position: 'right',\n                  color: '#fff',\n                  fontSize: 9,\n                  show: true\n                },\n                emphasis: {\n                  show: true\n                }\n              },\n              itemStyle: {\n                normal: {\n                  color: '#F62157'\n                  // color: colors[colorIndex][n]\n                }\n              }\n            },\n            //地图？\n            {\n              type: 'map',\n              map: '陕西',\n              geoIndex: 0,\n              aspectScale: 0.75, //长宽比\n              showLegendSymbol: false, // 存在legend时显示\n              label: {\n                normal: {\n                  show: false\n                },\n                emphasis: {\n                  show: false,\n                  textStyle: {\n                    color: '#fff'\n                  }\n                }\n              },\n              roam: true,\n              itemStyle: {\n                normal: {\n                  areaColor: '#031525',\n                  borderColor: '#FFFFFF',\n                },\n                emphasis: {\n                  areaColor: '#2B91B7'\n                }\n              },\n              animation: false,\n              data: mapData\n            },\n            //地图点的动画效果\n            {\n              //  name: 'Top 5',\n              type: 'effectScatter',\n              coordinateSystem: 'geo',\n              data: convertData(mapData[n].sort(function(a, b) {\n                return b.value - a.value;\n              }).slice(0, 20)),\n              symbolSize: function(val) {\n                return 10;\n              },\n              showEffectOn: 'render',\n              rippleEffect: {\n                brushType: 'stroke'\n              },\n              hoverAnimation: true,\n              label: {\n                normal: {\n                  formatter: '{b}',\n                  position: 'right',\n                  show: true\n                }\n              },\n              itemStyle: {\n                normal: {\n                  color: colors[colorIndex][n],\n                  shadowBlur: 10,\n                  shadowColor: colors[colorIndex][n]\n                }\n              },\n              zlevel: 1\n            },\n            // {\n            //     name: '数据点',\n            //     type: 'scatter',\n            //     coordinateSystem: 'geo',\n            //     symbol: 'pin', //气泡\n            //     symbolSize: function(val) {\n            //         return 32;\n            //     },\n            //     label: {\n            //         normal: {\n            //             show: true,\n            //             textStyle: {\n            //                 formatter: '{@value}',\n            //                 color: '#fff',\n            //                 fontSize: 9,\n            //             }\n            //         }\n            //     },\n            //     itemStyle: {\n            //         normal: {\n            //             color: '#F62157', //标志颜色\n            //         }\n            //     },\n            //     zlevel: 6,\n            //     data: convertData(mapData[n]),\n            // },\n            //柱状图\n            {\n              zlevel: 1.5,\n              type: 'bar',\n              symbol: 'none',\n              itemStyle: {\n                normal: {\n                  color: colors[colorIndex][n]\n                }\n              },\n              data: barData[n]\n            }\n          ]\n        })\n      }\n\n      this.chart.setOption(optionXyMap01)\n\n    },\n    randomNum(minNum, maxNum) {\n      switch (arguments.length) {\n        case 1:\n          return parseInt(Math.random() * minNum + 1, 10);\n          break;\n        case 2:\n          return parseInt(Math.random() * (maxNum - minNum + 1) + minNum, 10);\n          break;\n        default:\n          return 0;\n          break;\n      }\n    }\n  }\n}\n</script>\n"]}]}